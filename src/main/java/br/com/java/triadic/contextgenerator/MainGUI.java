/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.java.triadic.contextgenerator;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.Writer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Josué
 */
public class MainGUI extends javax.swing.JFrame {
    
    File file;

    /**
     * Creates new form MainGUI
     */
    public MainGUI() {
        initComponents();
        saveJsonButton.setEnabled(false);
        jProgressBar1.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        saveJsonButton = new javax.swing.JButton();
        selectFileButton = new javax.swing.JButton();
        jProgressBar1 = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(460, 200));
        setResizable(false);

        jTextField1.setEditable(false);

        saveJsonButton.setText("Salvar JSON");
        saveJsonButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveJsonButtonActionPerformed(evt);
            }
        });

        selectFileButton.setText("Selecionar Arquivo...");
        selectFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectFileButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(saveJsonButton, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(selectFileButton, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectFileButton))
                .addGap(18, 18, 18)
                .addComponent(saveJsonButton, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void selectFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectFileButtonActionPerformed
        JFileChooser fc = new JFileChooser();
        int returnVal = fc.showOpenDialog(this);
        
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            file = fc.getSelectedFile();
            jTextField1.setText(file.getAbsolutePath());
            saveJsonButton.setEnabled(true);
        }
        
    }//GEN-LAST:event_selectFileButtonActionPerformed

    private void saveJsonButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveJsonButtonActionPerformed
        ContextFormatter cf = new ContextFormatter(file);

        jProgressBar1.setVisible(true);
        jProgressBar1.setIndeterminate(true);
        saveJsonButton.setEnabled(false);
        
        new Thread(() -> {
            if (cf.readFile() && cf.buildRelations()) {
                JFileChooser fc = new JFileChooser();
                int returnVal = fc.showSaveDialog(MainGUI.this);
                
                if (returnVal == JFileChooser.APPROVE_OPTION) {
                    
                    try (Writer writer = new FileWriter(fc.getSelectedFile() + ".json")) {
                        cf.generate(writer);
                        JOptionPane.showMessageDialog(MainGUI.this, String.format(
                                "%d objetos, %d atributos e %d condições",
                                cf.getObjects().size(),
                                cf.getAttributes().size(),
                                cf.getConditions().size()), "Sucesso", JOptionPane.INFORMATION_MESSAGE);
                    } catch (IOException ex) {
                        JOptionPane.showMessageDialog(MainGUI.this, "Ocorreu um erro ao gerar arquivo.", "Erro", JOptionPane.ERROR_MESSAGE);
                        Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
//                    try {
//                        String result = cf.generate();
//                        FileWriter fw = new FileWriter(fc.getSelectedFile() + ".json");
//                        fw.write(result);
//                        JOptionPane.showMessageDialog(MainGUI.this, String.format("%d objetos, %d atributos e %d condições",
//                                cf.getObjects().size(),
//                                cf.getAttributes().size(),
//                                cf.getConditions().size()), "Sucesso", JOptionPane.INFORMATION_MESSAGE);
//                    } catch (IOException ex) {
//                        JOptionPane.showMessageDialog(MainGUI.this, "Ocorreu um erro ao gerar arquivo.", "Erro", JOptionPane.ERROR_MESSAGE);
//                    }
                }
            } else {
                JOptionPane.showMessageDialog(MainGUI.this, "Ocorreu um erro ao gerar arquivo.", "Erro", JOptionPane.ERROR_MESSAGE);
            }
            jProgressBar1.setIndeterminate(false);
            jProgressBar1.setVisible(false);
            saveJsonButton.setEnabled(true);
        }).start();
    }//GEN-LAST:event_saveJsonButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MainGUI().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton saveJsonButton;
    private javax.swing.JButton selectFileButton;
    // End of variables declaration//GEN-END:variables
}
